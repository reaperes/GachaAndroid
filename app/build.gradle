apply plugin: 'com.android.application'

android {
	compileSdkVersion 22
	buildToolsVersion "22.0.1"

	defaultConfig {
		applicationId "today.gacha.android"
		minSdkVersion 15
		targetSdkVersion 22
		versionCode 1
		versionName "1.0"
	}
	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}
	testOptions {
		unitTests.returnDefaultValues = true
	}
}

//sourceSets {
//	integrationTest {
//		java.srcDir file('src/integrationTest/java')
//	}
//}

dependencies {
	provided 'org.projectlombok:lombok:1.16.4'

	compile fileTree(dir: 'libs', include: ['*.jar'])
	compile 'com.android.support:appcompat-v7:22.1.1'
	compile 'com.google.android.gms:play-services:7.5.0'

	compile 'com.google.guava:guava:18.0'
	compile 'com.squareup:otto:1.3.7'
	compile 'com.mcxiaoke.volley:library:1.0.16'
	compile 'com.google.code.gson:gson:2.3.1'

	testCompile 'junit:junit:4.12'
	testCompile 'org.mockito:mockito-core:1.10.19'
	androidTestCompile 'org.hamcrest:hamcrest-library:1.1'
}

//task integrationTest(type: Test, dependsOn: assemble) {
//	testClassesDir = sourceSets.integrationTest.output.classesDir
//
//	android.sourceSets.main.java.srcDirs.each { dir ->
//		def buildDir = dir.getAbsolutePath().split('/')
//		buildDir =  (buildDir[0..(buildDir.length - 4)] + ['build', 'classes', 'debug']).join('/')
//
//		sourceSets.integrationTest.compileClasspath += files(buildDir)
//		sourceSets.integrationTest.runtimeClasspath += files(buildDir)
//	}
//
//	classpath = sourceSets.integrationTest.runtimeClasspath
//}
